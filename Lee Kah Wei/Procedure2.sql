CREATE OR REPLACE PROCEDURE UPDATE_TRANSACTION_TOTAL_PAYMENT(V_TRANSACTIONID IN VARCHAR2) AS
	V_TRANSACTION_EXIST NUMBER;
	V_SCHEDULEID VARCHAR2(30);
	V_CHILDTICKET NUMBER;
	V_ADULTTICKET NUMBER;
	V_CITIZENTICKET NUMBER;
	V_CHILDPRICE NUMBER(4,2) := 0.00;
	V_ADULTPRICE NUMBER(4,2) := 0.00;
	V_CITIZENPRICE NUMBER(4,2) := 0.00;
	V_NEW_TOTALPAYMENT NUMBER(7,2) := 0.00;
	V_CURRENT_PAYMENT NUMBER(7,2) := 0.00;
	V_OLD_TOTALPAYMENT NUMBER(7,2) := 0.00;

	V_PAYMENTTYPE VARCHAR2(30);
	V_MEMBERID VARCHAR2(30);
	V_PURCHASEDATE VARCHAR2(30);

	TRANSACTION_NOT_EXIST EXCEPTION;
	PRAGMA exception_init(TRANSACTION_NOT_EXIST, -20107);

	CURSOR TRANSACTION_DETAILS_CURSOR IS
		SELECT SCHEDULEID, childTicketQty, adultTicketQty, citizenTicketQty
		FROM TRANSACTIONDETAILS
		where transactionID = v_transactionID;

BEGIN
	V_TRANSACTION_EXIST := FINDTRANSACTIONID(V_TRANSACTIONID);

	IF V_TRANSACTION_EXIST = 0 THEN 
		RAISE_APPLICATION_ERROR(-20107, 'TRANSACTION DOESNT EXIST');
	ELSE
		SELECT MEMBERID, PURCHASEDATE, PAYMENTTYPE INTO V_MEMBERID, V_PURCHASEDATE, V_PAYMENTTYPE
		FROM TRANSACTION
		WHERE TRANSACTIONID = V_TRANSACTIONID;

		OPEN TRANSACTION_DETAILS_CURSOR;
		LOOP
		FETCH TRANSACTION_DETAILS_CURSOR INTO
			V_SCHEDULEID,
			V_CHILDTICKET,
			V_ADULTTICKET,
			V_CITIZENTICKET;
		EXIT WHEN (TRANSACTION_DETAILS_CURSOR%NOTFOUND);
		
		SELECT CHILDPRICE, ADULTPRICE, SENIORCITIZENPRICE INTO V_CHILDPRICE, V_ADULTPRICE, V_CITIZENPRICE
		FROM BUSSCHEDULE BS, TICKETPRICE TP
		WHERE BS.SCHEDULEID = V_SCHEDULEID AND BS.ROUTENO = TP.ROUTENO AND TP.STATUS = 'CURRENT';

		V_CURRENT_PAYMENT := (V_CHILDTICKET * V_CHILDPRICE) + (V_ADULTTICKET * V_ADULTPRICE) + (V_CITIZENTICKET * V_CITIZENPRICE);
		
		V_NEW_TOTALPAYMENT := V_NEW_TOTALPAYMENT +  V_CURRENT_PAYMENT;
		END LOOP;
		
		UPDATE TRANSACTION
		SET TOTALPAYMENT = V_NEW_TOTALPAYMENT
		WHERE TRANSACTIONID = V_TRANSACTIONID;

	END IF;
		DBMS_OUTPUT.PUT_LINE('PAYMENT DETAILS');
		DBMS_OUTPUT.PUT_LINE('-----------------------------------');
		DBMS_OUTPUT.PUT_LINE('MEMBER ID: ' || V_MEMBERID);
		DBMS_OUTPUT.PUT_LINE('TRANSACTION ID: ' || V_SCHEDULEID);
		DBMS_OUTPUT.PUT_LINE('PURCHASE DATE: ' || V_PURCHASEDATE);
		DBMS_OUTPUT.PUT_LINE('PAYMENT TYPE: ' || V_PAYMENTTYPE);
		DBMS_OUTPUT.PUT_LINE('TOTAL PAYMENT: RM ' || V_NEW_TOTALPAYMENT);
	EXCEPTION
		WHEN TRANSACTION_NOT_EXIST THEN
			DBMS_OUTPUT.PUT_LINE(chr(10) || SQLERRM);
			DBMS_OUTPUT.PUT_LINE('TRANSACTION DOESNT EXIST OR HAS BEEN DELETED DUE TO OVER NUMBER OF TICKET');
END;
/

EXEC UPDATE_TRANSACTION_TOTAL_PAYMENT('T24659');
EXEC UPDATE_TRANSACTION_TOTAL_PAYMENT('T24670');